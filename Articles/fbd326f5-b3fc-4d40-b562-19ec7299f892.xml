<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>fbd326f5-b3fc-4d40-b562-19ec7299f892</Id>
    <Id_History>fbd326f5-b3fc-4d40-b562-19ec7299f892,</Id_History>
    <Library_Id>be5273b1-d682-4361-99d9-6204f2d47eb7</Library_Id>
    <Title>Sensitive Cookie in HTTPS Session without Secure Attribute</Title>
    <Category>Session Management</Category>
    <Phase>Implementation</Phase>
    <Technology> Any</Technology>
    <Type>Vulnerability</Type>
    <DirectLink>Sensitive Cookie in HTTPS Session without Secure Attribute</DirectLink>
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="wikitext">
    <Data><![CDATA[=Description

When a Cookie has the Secure flag set, that cookie will not be sent over a non-encrypted connection. If the Secure attribute is not set on a sensitive cookie, the cookie may be sent in plaintext and an attacker may intercept it. If an attacker is able to intercept a session cookie, he can impersonate an authenticated user. This vulnerability affects web applications that use authentication. 

=Impact

Sending a sensitive cookie in plaintext creates a risk that an eavesdropping attacker may intercept it. Once the attacker has intercepted a session cookie, he can use it to hijack the user's session. Hijacking the user's session allows the attacker to impersonate that user. If the attacker hijacks an administrator's session, the attacker may take full control of the application. 

=Countermeasures

To prevent this problem, set Secure and HTTP-Only flags on all sensitive cookies and send session cookies over HTTPS. 

=Application Check

To check for adequate protection against this vulnerability, find all code that stores session cookies to ensure that it sets the Secure flag, and ensure that session cookies are sent over HTTPS. 

=Specific Technologies

* [[0cd0323c-88b1-4b26-87b8-f0e6bc30a47e|Java Sensitive Cookie in HTTPS Session without Secure Attribute]]]]></Data>
  </Content>
</TeamMentor_Article>