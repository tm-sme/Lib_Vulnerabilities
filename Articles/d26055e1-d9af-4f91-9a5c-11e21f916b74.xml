<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>d26055e1-d9af-4f91-9a5c-11e21f916b74</Id>
    <Id_History>d26055e1-d9af-4f91-9a5c-11e21f916b74,</Id_History>
    <Library_Id>be5273b1-d682-4361-99d9-6204f2d47eb7</Library_Id>
    <Title>HTTP Response Smuggling</Title>
    <Category>Deployment Considerations</Category>
    <Phase>Deployment</Phase>
    <Technology> Any</Technology>
    <Type>Vulnerability</Type>
    <DirectLink>HTTP Response Smuggling</DirectLink>
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="wikitext">
    <Data><![CDATA[==Description==

HTTP response smuggling vulnerabilities occur when an HTTP firewall or proxy sends multiple HTTP responses to the client when the device expects to pass only a single response to the client. The application sends a malformed response to a client's request, and this causes the HTTP firewall or proxy to send multiple responses to the client. 

Even though the application has to send a malformed response for the attack to succeed, this is a vulnerability in the HTTP firewall or proxy. Since the application does need to send a malformed response, an additional vulnerability—called HTTP response splitting—needs to be present in the application in order to exploit an HTTP response smuggling vulnerability.

HTTP firewalls and proxies are potentially affected by HTTP response smuggling vulnerabilities.

==Impact==

The impact of HTTP response smuggling is that the attacker will be able to bypass the HTTP firewall or proxy to perform an HTTP response splitting attack. Note that an HTTP response splitting vulnerability must be present in the application for this attack vector to work. The rest of the attack scenario is the same as for a regular HTTP response splitting vulnerability. 

In some cases, HTTP response smuggling might result in HTTP responses from the application that appear to come from another domain, which is a form of spoofing. For this attack vector to work, the client has to expect data from the domain being spoofed, and the timing has to be very precise, so this type of attack is not likely to occur outside of a controlled environment.

==Countermeasures==

HTTP response smuggling is a vulnerability in the HTTP firewall or proxy, so there is no application security countermeasure to prevent it. To prevent HTTP response smuggling, update all network devices.

==Application Check==

To verify that HTTP response smuggling is preventing, make sure that all network devices are updated.

==Specific Technologies==

* [[b70f0b57-4a99-4883-a252-caba24083e2e|ASP.NET HTTP Response Smuggling]]
* [[c7f8b8b1-9eda-4e47-9f33-ea2f66b7cf2d|Java HTTP Response Smuggling]]
* [[2b8e8e73-cc6e-4e00-bfa8-139c5da9f026|PHP HTTP Response Smuggling]]]]></Data>
  </Content>
</TeamMentor_Article>