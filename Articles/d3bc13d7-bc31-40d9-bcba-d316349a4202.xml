<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>d3bc13d7-bc31-40d9-bcba-d316349a4202</Id>
    <Id_History>d3bc13d7-bc31-40d9-bcba-d316349a4202,</Id_History>
    <Library_Id>be5273b1-d682-4361-99d9-6204f2d47eb7</Library_Id>
    <Title>Routing Detour</Title>
    <Category>Communication Security</Category>
    <Phase>Implementation</Phase>
    <Technology>ASP.NET 4.0</Technology>
    <Type>Vulnerability</Type>
    <DirectLink>Routing Detour</DirectLink>
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="wikitext">
    <Data><![CDATA[==Description==

Routing detour vulnerablities occur when an attacker is able to manipulate SOAP headers of an application that uses the WS-Routing protocol. The attacker must be able to conduct Man-in-the-Middle (MitM) attacks to exploit routing detour vulnerabilities - this places a severe restriction on their exploitability. 

If the attacker can perform Man-in-the-Middle attacks, there are additional attack vectors that are potentially more dangerous than routing detour that become available to the attacker. For example, an attacker with MitM capability can redirect users to malicious pages that will attempt to exploit client-side vulnerabilities, or to fake authentication pages that will steal user credentials. 

The impact of routing detour vulnerabilities is that the attacker will be able to route SOAP messages that use the WS-Routing protocol through an attacker-controlled server, and will thus be able to access the contents of these SOAP messages. It is unclear why an attacker with a MitM capability would bother doing this, instead of just sniffing the SOAP traffic (together with all the rest of the traffic).

Applications that use the WS-Routing protocol are affected by routing detour vulnerabilities.

==Impact==

The impact of routing detour vulnerabilities is that an attacker with MitM capability can reroute SOAP messages to go through an attacker-controlled server and thus compromise the contents of these SOAP messages. The extent of damage depends on how sensitive the data in these SOAP messages is. 

Overall, routing detour vulnerabilities are not practical to exploit, because an attacker with a MitM capability can just sniff the SOAP messages without rerouting them. Because routing detour is not a practical vulnerability to exploit, there is no typical attack vector that uses this vulnerability type.

==Countermeasures==

To prevent routing detour vulnerabilities and most other Man-in-the-Middle based vulnerabilities, use SSL/TLS to protect web service connections and don't use WS-Routing.

* [[3ae23b58-be94-4af7-a255-dad706dd784e|Use SSL/TLS to Protect Web Service Connections]]
* [[ae8357a3-2af0-4022-a9ee-77918d1de73c|Do Not Use WS-Routing]]

==Application Check==

To make sure that routing detour vulnerabilities and most other Man-in-the-Middle based vulnerabilities are prevented, verify that SSL/TLS is used to protect web service connections and WS-Routing is not used.

* [[88c4ea36-f910-40ac-b98b-4a42b2edd3b0|SSL/TLS Is Used to Protect Web Service Connections]]
* [[ba5a7df0-f96f-4f39-9429-fbd566d7fd6b|WS-Routing Is Not Used]]

==Additional Resources==

* For more information about routing detour vulnerabilities, see http://projects.webappsec.org/w/page/13246956/Routing%20Detour
]]></Data>
  </Content>
</TeamMentor_Article>