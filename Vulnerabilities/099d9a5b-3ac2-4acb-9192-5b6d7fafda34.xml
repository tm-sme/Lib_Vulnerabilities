<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>099d9a5b-3ac2-4acb-9192-5b6d7fafda34</Id>
    <Id_History>00000000-0000-0000-0000-0000004deda7,099d9a5b-3ac2-4acb-9192-5b6d7fafda34,</Id_History>
    <Library_Id>be5273b1-d682-4361-99d9-6204f2d47eb7</Library_Id>
    <Title>Missing XML Validation</Title>
    <Category>Input and Data Validation</Category>
    <Phase>Implementation</Phase>
    <Technology>ASP.NET 4.0</Technology>
    <Type>Vulnerability</Type>
    <DirectLink>Missing XML Validation</DirectLink>
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="wikitext">
    <Data><![CDATA[=Description

Missing XML validation means that an attacker may cause the application to parse invalid XML data. This vulnerability type refers specifically to not validating XML against a schema. In itself, this might not cause any harm, but it may enable other vulnerabilities, such as XML Entity Injection. This vulnerability type affects all applications that parse XML data. 

=Impact

Missing XML validation may enable other attacks that exploit other vulnerabilities. The exact impact depends on the kind of other vulnerabilities that are enabled. The most likely and dangerous scenario is some form of XML injection attack, where the attack manipulates application data by sending malformed XML data. For example, if the application uses XML to store authentication credentials, the attacker may be able to send XML data that authenticates him as an administrative user, and he may then take over the application. For that to be possible, a number of other vulnerabilities in addition to missing XML validation would need to be present. 

=Countermeasures

To prevent this vulnerability type, validate untrusted XML data.  XML validation helps prevent attacks that exploit other vulnerabilities, and should always be used when untrusted XML data is processed.

Validate XML Data Against XML Schema:

* [[00000000-0000-0000-0000-0000005a126e|Validate XML Data Using a Schema]]

=Application Check

To check for adequate protection against this vulnerability type, verify that untrusted XML data is validated.

XML Data Is Validated Against XML Schema:

* [[00000000-0000-0000-0000-0000006bb239|XML Data Is Validated Using a Schema]]

=Computer Based Training Links=

Use the following Computer Based Training course(s) for more background information about this type of vulnerabilities.

==Creating Secure Code – .NET 4.0 Foundations==

This course describes .NET security features, including concepts such as Code Access Security (CAS) and .NET cryptographic technologies. It also provides secure coding best practices that will enable you to build more secure applications in .NET. 

[[https://teamprofessor.absorbtraining.com/ninja/#/courses/course/127611|COD 215 Creating Secure Code – .NET 4.0 Foundations]]

==Creating Secure ASP.NET Code==

This in-depth course examines the development of secure Web applications in ASP.Net. It provides developers and testers with an overview of common Web application vulnerabilities and a set of nine best practices and techniques to follow in order to avoid them. Throughout the course, students are provided with interactive games and simulations designed to reinforce the secure design and coding concepts that were introduced.

[[https://teamprofessor.absorbtraining.com/ninja/#/courses/course/127607|COD 311 Creating Secure ASP.NET Code]]

//Valid login credentials and enrollment in the course itself are required to access Team Professor content. If you need login credentials, please contact support@securityinnovation.com for help.//

=Additional Resources

* For more information about this vulnerability type, see http://minsky.gsi.dit.upm.es/semanticwiki/index.php/Missing_XML_Validation
* For more information about this vulnerability type, see https://www.owasp.org/index.php/Missing_XML_Validation]]></Data>
  </Content>
</TeamMentor_Article>