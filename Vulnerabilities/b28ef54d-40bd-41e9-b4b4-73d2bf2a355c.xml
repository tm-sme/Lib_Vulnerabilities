<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>b28ef54d-40bd-41e9-b4b4-73d2bf2a355c</Id>
    <Id_History>00000000-0000-0000-0000-0000008aa974,b28ef54d-40bd-41e9-b4b4-73d2bf2a355c,c6bd06bf-f5ac-4098-936d-fde097651c83,</Id_History>
    <Library_Id>be5273b1-d682-4361-99d9-6204f2d47eb7</Library_Id>
    <Title>Hard-coded Credentials</Title>
    <Category>Authentication</Category>
    <Phase>Implementation</Phase>
    <Technology>ASP.NET 4.0</Technology>
    <Type>Vulnerability</Type>
    <DirectLink>Hard-coded Credentials</DirectLink>
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="wikitext">
    <Data><![CDATA[=Description

Applications that use authentication need a method for storing credentials. Credentials may be stored for authenticating users to the application or for the application to authenticate to external services. One of the simplest ways to store the credentials is to hard-code them into the application. This approach is not secure, because anyone with access to the application code is able to recover these credentials. Once an attacker has recovered the credentials, he can use them to authenticate with the application or to access the external services. 

=Impact

If the attacker obtains the database access credentials, he may be able to connect to the database and execute arbitrary queries. The privileges granted to the attacker will be based on the access level of the credentials. Typically, the attacker is then able to retrieve, modify, and delete any data in the database, or modify the database structure. Having this level of control over the database usually allows the attacker to take full control of the application. If the attacker is able to leverage additional vulnerabilities, or if the servers are not configured securely, the attacker may also take full control of the application server and the database server. 

=Countermeasures

To prevent this vulnerability, provide a secure admin interface that allows changing credentials and store credentials securely. 

Provide a secure administrative interface that allows changing credentials:

* [[00000000-0000-0000-0000-000000066326|Provide a Secure Administrative Interface that Allows Changing Passwords]]

Store credentials securely:
* [[00000000-0000-0000-0000-0000006adfa3|Store Passwords Securely]]

=Application Check

To check for adequate protection against this vulnerability, ensure that a secure administrative interface allows changing credentials and that credentials are stored securely.

A secure administrative interface allows changing credentials:
* [[00000000-0000-0000-0000-0000006dd207|A Secure Administrative Interface that Allows Changing Passwords Is Provided]]

Credentials are stored securely:

* [[00000000-0000-0000-0000-00000077a50c|Passwords Are Stored Securely]]

=Computer Based Training Links=

Use the following Computer Based Training course(s) for more background information about this type of vulnerabilities.

==Creating Secure Code – .NET 4.0 Foundations==

This course describes .NET security features, including concepts such as Code Access Security (CAS) and .NET cryptographic technologies. It also provides secure coding best practices that will enable you to build more secure applications in .NET. 

[[https://teamprofessor.absorbtraining.com/ninja/#/courses/course/127611|COD 215 Creating Secure Code – .NET 4.0 Foundations]]

==Creating Secure ASP.NET Code==

This in-depth course examines the development of secure Web applications in ASP.Net. It provides developers and testers with an overview of common Web application vulnerabilities and a set of nine best practices and techniques to follow in order to avoid them. Throughout the course, students are provided with interactive games and simulations designed to reinforce the secure design and coding concepts that were introduced.

[[https://teamprofessor.absorbtraining.com/ninja/#/courses/course/127607|COD 311 Creating Secure ASP.NET Code]]

//Valid login credentials and enrollment in the course itself are required to access Team Professor content. If you need login credentials, please contact support@securityinnovation.com for help.//

]]></Data>
  </Content>
</TeamMentor_Article>